// ======= WhatsApp flotante: mostrar tras scroll + mensaje por horario =======
document.addEventListener('DOMContentLoaded', () => {
Â  const waBtn = document.querySelector('.whatsapp-float');
Â  if (!waBtn) return; 

Â  // 1) Mensaje dinÃ¡mico segÃºn hora local (9 a 18 h "en lÃ­nea")
Â  const h = new Date().getHours();
Â  const enHorario = h >= 9 && h < 18;
Â  const msg = enHorario ? 'Â¡Respondo ahora!' : 'Fuera de horario, te contesto pronto';
Â  waBtn.title = `WhatsApp â€” ${msg}`;
Â  waBtn.setAttribute('aria-label', `Chatea por WhatsApp â€” ${msg}`);

Â  // ðŸš¨ Importante: Reemplaza 527221234567 con tu nÃºmero real de WhatsApp.
Â  const telefono = '527221234567'; 
Â  const texto = encodeURIComponent('Hola, vengo del sitio de Sudaderas. Me interesa una playera.');
Â  // Esto arma la URL completa con el texto predefinido
Â  waBtn.href = `https://wa.me/${telefono}?text=${texto}`;

Â  // 2) Mostrar/ocultar por scroll (aparece al bajar 300px)
Â  const UMBRAL = 300; // Define a partir de cuÃ¡ntos pÃ­xeles de scroll aparece el botÃ³n
Â  const toggleWA = () => {
Â  Â  if (window.scrollY > UMBRAL) { 
Â  Â  Â  waBtn.classList.add('show');
Â  Â  } else {
Â  Â  Â  waBtn.classList.remove('show');
Â  Â  }
Â  };

Â  // Estado inicial y listener
Â  toggleWA(); // Llama una vez para verificar si ya hay scroll al cargar
Â  window.addEventListener('scroll', toggleWA, { passive: true });


Â  // ====== LÃ³gica para el formulario de pedido (para que el botÃ³n funcione) ======
Â  const formPedido = document.getElementById('formPedido');
Â  const btnConfirmar = document.getElementById('btnConfirmar');
Â  const outTotal = document.getElementById('outTotal');
Â  const outLista = document.getElementById('outLista');
Â  const outNombre = document.getElementById('outNombre');
Â  const confirmNombre = document.getElementById('confirmNombre');
Â  const nombreClienteInput = document.getElementById('nombreCliente');

Â  // FunciÃ³n para calcular y mostrar el resumen del pedido
Â  const actualizarResumen = () => {
Â  Â  const nombre = nombreClienteInput.value.trim() || 'â€”';
Â  Â  outNombre.textContent = nombre;

Â  Â  // Obtener datos del formulario
Â  Â  const modeloSelect = document.getElementById('selModelo');
Â  Â  const modeloOption = modeloSelect.options[modeloSelect.selectedIndex];
Â  Â  const modelo = modeloOption ? modeloOption.value : '';
Â  Â  const precioBase = modeloOption ? parseInt(modeloOption.getAttribute('data-precio')) : 0;
Â  Â  const talla = document.getElementById('selTalla').value;
Â  Â  const color = document.getElementById('selColor').value;
Â  Â  const cantidad = parseInt(document.getElementById('inpCantidad').value) || 0;
Â  Â  
Â  Â  const chkNombreNumero = document.getElementById('chkNombreNumero');
Â  Â  const chkParcheLiga = document.getElementById('chkParcheLiga');
Â  Â  const envioSelect = document.getElementById('selEnvio');
Â  Â  const envioPrecio = parseInt(envioSelect.options[envioSelect.selectedIndex].getAttribute('data-precio')) || 0;

Â  Â  let subtotal = precioBase * cantidad;
Â  Â  let personalizacion = 0;
Â  Â  let total = subtotal;

Â  Â  const listaItems = [];

Â  Â  if (cantidad > 0 && modelo) {
Â  Â  Â  listaItems.push(`<li>${cantidad} x ${modelo} (${talla}, ${color}): $${subtotal.toFixed(2)}</li>`);
Â  Â  } else {
Â  Â  Â  outLista.innerHTML = `<li class="text-muted">AÃºn no has generado tu pedido.</li>`;
Â  Â  Â  outTotal.textContent = '$0';
Â  Â  Â  btnConfirmar.disabled = true;
Â  Â  Â  return; // Detener si no hay producto vÃ¡lido
Â  Â  }

Â  Â  // Sumar personalizaciones (por prenda)
Â  Â  if (chkNombreNumero && chkNombreNumero.checked) {
Â  Â  Â  personalizacion += (parseInt(chkNombreNumero.getAttribute('data-precio')) * cantidad);
Â  Â  }
Â  Â  if (chkParcheLiga && chkParcheLiga.checked) {
Â  Â  Â  personalizacion += (parseInt(chkParcheLiga.getAttribute('data-precio')) * cantidad);
Â  Â  }

Â  Â  total += personalizacion;

Â  Â  if (personalizacion > 0) {
Â  Â  Â  listaItems.push(`<li>PersonalizaciÃ³n (Total): $${personalizacion.toFixed(2)}</li>`);
Â  Â  }

Â  Â  // Sumar envÃ­o (solo una vez)
Â  Â  total += envioPrecio;
Â  Â  listaItems.push(`<li>EnvÃ­o (${envioSelect.value}): $${envioPrecio.toFixed(2)}</li>`);
Â  Â  
Â  Â  outLista.innerHTML = listaItems.join('');
Â  Â  outTotal.textContent = `$${total.toFixed(2)}`;
Â  Â  btnConfirmar.disabled = false;
Â  };

Â  // Ejecutar la actualizaciÃ³n cada que cambian los campos del formulario de pedido
Â  formPedido.addEventListener('input', actualizarResumen);

Â  // LÃ³gica del botÃ³n "Generar pedido"
Â  formPedido.addEventListener('submit', (e) => {
Â  Â  e.preventDefault();
Â  Â  actualizarResumen(); 
Â  });

Â  // LÃ³gica del botÃ³n "Confirmar pedido" (Modal)
Â  btnConfirmar.addEventListener('click', () => {
Â  Â  const nombre = nombreClienteInput.value.trim() || 'Cliente';
Â  Â  confirmNombre.textContent = nombre;
Â  });

Â  // Inicializar el resumen
Â  actualizarResumen();
});